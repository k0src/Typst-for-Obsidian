/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var w=Object.defineProperty;var A=Object.getOwnPropertyDescriptor;var H=Object.getOwnPropertyNames;var q=Object.prototype.hasOwnProperty;var K=(r,o)=>{for(var e in o)w(r,e,{get:o[e],enumerable:!0})},z=(r,o,e,i)=>{if(o&&typeof o=="object"||typeof o=="function")for(let n of H(o))!q.call(r,n)&&n!==e&&w(r,n,{get:()=>o[n],enumerable:!(i=A(o,n))||i.enumerable});return r};var O=r=>z(w({},"__esModule",{value:!0}),r);var Z={};K(Z,{default:()=>b});module.exports=O(Z);var F=require("obsidian");var p=require("obsidian");var a=require("@codemirror/view"),E=require("@codemirror/state");var I=require("@codemirror/view"),u=require("@codemirror/language"),t=require("@lezer/highlight"),R="#e5c07b",x="#e06c75",W="#56b6c2",G="#ffffff",m="#abb2bf",k="#7d8799",$="#61afef",j="#98c379",T="#d19a66",J="#c678dd",Q="#21252b",V="#2c313a",L="#282c34",v="#353a42",U="#3E4451",N="#528bff";var X=I.EditorView.theme({"&":{color:m,backgroundColor:L},".cm-content":{caretColor:N},".cm-cursor, .cm-dropCursor":{borderLeftColor:N},"&.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground, .cm-selectionBackground, .cm-content ::selection":{backgroundColor:U},".cm-panels":{backgroundColor:Q,color:m},".cm-panels.cm-panels-top":{borderBottom:"2px solid black"},".cm-panels.cm-panels-bottom":{borderTop:"2px solid black"},".cm-searchMatch":{backgroundColor:"#72a1ff59",outline:"1px solid #457dff"},".cm-searchMatch.cm-searchMatch-selected":{backgroundColor:"#6199ff2f"},".cm-activeLine":{backgroundColor:"#6699ff0b"},".cm-selectionMatch":{backgroundColor:"#aafe661a"},"&.cm-focused .cm-matchingBracket, &.cm-focused .cm-nonmatchingBracket":{backgroundColor:"#bad0f847"},".cm-gutters":{backgroundColor:L,color:k,border:"none"},".cm-activeLineGutter":{backgroundColor:V},".cm-foldPlaceholder":{backgroundColor:"transparent",border:"none",color:"#ddd"},".cm-tooltip":{border:"none",backgroundColor:v},".cm-tooltip .cm-tooltip-arrow:before":{borderTopColor:"transparent",borderBottomColor:"transparent"},".cm-tooltip .cm-tooltip-arrow:after":{borderTopColor:v,borderBottomColor:v},".cm-tooltip-autocomplete":{"& > ul > li[aria-selected]":{backgroundColor:V,color:m}}},{dark:!0}),Y=u.HighlightStyle.define([{tag:t.tags.keyword,color:J},{tag:[t.tags.name,t.tags.deleted,t.tags.character,t.tags.propertyName,t.tags.macroName],color:x},{tag:[t.tags.function(t.tags.variableName),t.tags.labelName],color:$},{tag:[t.tags.color,t.tags.constant(t.tags.name),t.tags.standard(t.tags.name)],color:T},{tag:[t.tags.definition(t.tags.name),t.tags.separator],color:m},{tag:[t.tags.typeName,t.tags.className,t.tags.number,t.tags.changed,t.tags.annotation,t.tags.modifier,t.tags.self,t.tags.namespace],color:R},{tag:[t.tags.operator,t.tags.operatorKeyword,t.tags.url,t.tags.escape,t.tags.regexp,t.tags.link,t.tags.special(t.tags.string)],color:W},{tag:[t.tags.meta,t.tags.comment],color:k},{tag:t.tags.strong,fontWeight:"bold"},{tag:t.tags.emphasis,fontStyle:"italic"},{tag:t.tags.strikethrough,textDecoration:"line-through"},{tag:t.tags.link,color:k,textDecoration:"underline"},{tag:t.tags.heading,fontWeight:"bold",color:x},{tag:[t.tags.atom,t.tags.bool,t.tags.special(t.tags.variableName)],color:T},{tag:[t.tags.processingInstruction,t.tags.string,t.tags.inserted],color:j},{tag:t.tags.invalid,color:G}]),S=[X,(0,u.syntaxHighlighting)(Y)];var l=require("@codemirror/commands"),f=require("@codemirror/language"),B=require("@codemirror/autocomplete"),y=require("@codemirror/search"),g=class{constructor(o,e,i){this.editorView=null;this.content="";this.container=o,this.app=e,this.onContentChange=i}initialize(o=""){this.content=o,this.createEditor()}createEditor(){this.container.empty();let o=this.container.createDiv("typst-editor-container"),e=document.body.classList.contains("theme-dark"),i=[(0,a.lineNumbers)(),(0,f.foldGutter)(),(0,a.dropCursor)(),(0,a.rectangularSelection)(),(0,a.highlightActiveLine)(),(0,l.history)(),(0,f.bracketMatching)(),(0,B.closeBrackets)(),(0,y.highlightSelectionMatches)(),E.EditorState.allowMultipleSelections.of(!0),a.keymap.of([l.indentWithTab,...l.defaultKeymap,...y.searchKeymap]),...e?[S]:[],a.EditorView.updateListener.of(n=>{n.docChanged&&(this.content=n.state.doc.toString(),this.onContentChange&&this.onContentChange(this.content))})];this.editorView=new a.EditorView({state:E.EditorState.create({doc:this.content,extensions:i}),parent:o})}getContent(){return this.editorView?this.editorView.state.doc.toString():this.content}setContent(o){if(this.editorView){let e=this.editorView.state.update({changes:{from:0,to:this.editorView.state.doc.length,insert:o}});this.editorView.dispatch(e)}this.content=o}focus(){var o;(o=this.editorView)==null||o.focus()}destroy(){this.editorView&&(this.editorView.destroy(),this.editorView=null)}};var c=class extends p.TextFileView{constructor(){super(...arguments);this.currentMode="source";this.modeIconContainer=null;this.typstEditor=null;this.fileContent=""}getViewType(){return"typst-view"}getDisplayText(){var e;return((e=this.file)==null?void 0:e.basename)||"Typst File"}async onOpen(){await super.onOpen(),this.addModeIcon()}onClose(){return this.typstEditor&&(this.typstEditor.destroy(),this.typstEditor=null),super.onClose()}addModeIcon(){let e=this.containerEl.querySelector(".view-actions");e&&(this.modeIconContainer=e.createDiv("clickable-icon"),this.modeIconContainer.addClass("view-action"),this.modeIconContainer.addEventListener("click",()=>{this.toggleMode()}),this.updateModeIcon())}toggleMode(){this.currentMode=this.currentMode==="source"?"reading":"source",this.updateModeIcon(),this.currentMode==="source"?this.showSourceMode():this.showReadingMode()}getCurrentMode(){return this.currentMode}updateModeIcon(){this.modeIconContainer&&(this.modeIconContainer.empty(),this.currentMode==="source"?((0,p.setIcon)(this.modeIconContainer,"pencil-line"),this.modeIconContainer.setAttribute("aria-label","Currently in source mode. Click to switch to reading mode.")):((0,p.setIcon)(this.modeIconContainer,"book-open"),this.modeIconContainer.setAttribute("aria-label","Currently in reading mode. Click to switch to source mode.")))}async setViewData(e,i){this.fileContent=e,this.currentMode==="source"?this.showSourceMode():this.showReadingMode()}getViewData(){return this.currentMode==="source"&&this.typstEditor?this.typstEditor.getContent():this.fileContent}showSourceMode(){let e=this.containerEl.querySelector(".view-content");e&&(e.empty(),this.typstEditor&&(this.typstEditor.destroy(),this.typstEditor=null),this.typstEditor=new g(e,this.app,i=>{this.fileContent=i,this.requestSave()}),this.typstEditor.initialize(this.fileContent))}showReadingMode(){let e=this.containerEl.querySelector(".view-content");if(e){e.empty(),this.typstEditor&&(this.typstEditor.destroy(),this.typstEditor=null);let i=e.createDiv("typst-reading-mode");i.textContent=this.fileContent}}clear(){this.fileContent="",this.typstEditor&&this.typstEditor.setContent("")}};var D=require("obsidian");var s=require("obsidian"),C=class extends s.Modal{constructor(e,i){super(e);this.fileName="";this.plugin=i}onOpen(){let{contentEl:e}=this;e.empty(),e.createEl("h2",{text:"Create New Typst File"}),new s.Setting(e).setName("File name").setDesc("Enter the name of the Typst file (without .typ extension)").addText(d=>{d.setPlaceholder("note").setValue(this.fileName).onChange(h=>{this.fileName=h}),d.inputEl.focus(),d.inputEl.select(),d.inputEl.addEventListener("keydown",h=>{h.key==="Enter"&&this.createFile()})});let i=e.createDiv("modal-button-container");i.createEl("button",{text:"Cancel"}).addEventListener("click",()=>{this.close()}),i.createEl("button",{text:"Create",cls:"mod-cta"}).addEventListener("click",()=>{this.createFile()})}async createFile(){if(!this.fileName.trim()){new s.Notice("Please enter a file name");return}try{let e=this.fileName.trim(),i=(0,s.normalizePath)(`${e}.typ`),n=this.app.vault.getAbstractFileByPath(i);if(n&&n instanceof s.TFile){new s.Notice("File already exists"),this.app.workspace.getLeaf(!0).openFile(n),this.close();return}let M=await this.app.vault.create(i,"",{});this.app.workspace.getLeaf(!0).openFile(M),this.close()}catch(e){console.error("Error creating Typst file:",e),new s.Notice("Error creating file")}}onClose(){let{contentEl:e}=this;e.empty()}};function P(r){r.addCommand({id:"create-typst-file",name:"Create new Typst file",callback:()=>{new C(r.app,r).open()}}),r.addCommand({id:"toggle-typst-mode",name:"Toggle between source and reading mode",checkCallback:o=>{let e=r.app.workspace.getActiveViewOfType(c);if(e instanceof c){if(!o){e.toggleMode();let i=e.getCurrentMode()}return!0}return o||new D.Notice("Must be in a Typst (.typ) file"),!1}})}var b=class extends F.Plugin{async onload(){this.registerExtensions(["typ"],"typst-view"),this.registerView("typst-view",o=>new c(o)),P(this)}onunload(){}};
