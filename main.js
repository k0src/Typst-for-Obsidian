/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var y=Object.defineProperty;var N=Object.getOwnPropertyDescriptor;var D=Object.getOwnPropertyNames;var F=Object.prototype.hasOwnProperty;var P=(a,o)=>{for(var e in o)y(a,e,{get:o[e],enumerable:!0})},A=(a,o,e,r)=>{if(o&&typeof o=="object"||typeof o=="function")for(let n of D(o))!F.call(a,n)&&n!==e&&y(a,n,{get:()=>o[n],enumerable:!(r=N(o,n))||r.enumerable});return a};var H=a=>A(y({},"__esModule",{value:!0}),a);var Q={};P(Q,{default:()=>f});module.exports=H(Q);var i=require("obsidian");var s=require("@codemirror/view"),v=require("@codemirror/state");var I=require("@codemirror/view"),p=require("@codemirror/language"),t=require("@lezer/highlight"),q="#e5c07b",M="#e06c75",K="#56b6c2",O="#ffffff",h="#abb2bf",C="#7d8799",W="#61afef",z="#98c379",x="#d19a66",R="#c678dd",G="#21252b",T="#2c313a",V="#282c34",b="#353a42",$="#3E4451",L="#528bff";var j=I.EditorView.theme({"&":{color:h,backgroundColor:V},".cm-content":{caretColor:L},".cm-cursor, .cm-dropCursor":{borderLeftColor:L},"&.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground, .cm-selectionBackground, .cm-content ::selection":{backgroundColor:$},".cm-panels":{backgroundColor:G,color:h},".cm-panels.cm-panels-top":{borderBottom:"2px solid black"},".cm-panels.cm-panels-bottom":{borderTop:"2px solid black"},".cm-searchMatch":{backgroundColor:"#72a1ff59",outline:"1px solid #457dff"},".cm-searchMatch.cm-searchMatch-selected":{backgroundColor:"#6199ff2f"},".cm-activeLine":{backgroundColor:"#6699ff0b"},".cm-selectionMatch":{backgroundColor:"#aafe661a"},"&.cm-focused .cm-matchingBracket, &.cm-focused .cm-nonmatchingBracket":{backgroundColor:"#bad0f847"},".cm-gutters":{backgroundColor:V,color:C,border:"none"},".cm-activeLineGutter":{backgroundColor:T},".cm-foldPlaceholder":{backgroundColor:"transparent",border:"none",color:"#ddd"},".cm-tooltip":{border:"none",backgroundColor:b},".cm-tooltip .cm-tooltip-arrow:before":{borderTopColor:"transparent",borderBottomColor:"transparent"},".cm-tooltip .cm-tooltip-arrow:after":{borderTopColor:b,borderBottomColor:b},".cm-tooltip-autocomplete":{"& > ul > li[aria-selected]":{backgroundColor:T,color:h}}},{dark:!0}),J=p.HighlightStyle.define([{tag:t.tags.keyword,color:R},{tag:[t.tags.name,t.tags.deleted,t.tags.character,t.tags.propertyName,t.tags.macroName],color:M},{tag:[t.tags.function(t.tags.variableName),t.tags.labelName],color:W},{tag:[t.tags.color,t.tags.constant(t.tags.name),t.tags.standard(t.tags.name)],color:x},{tag:[t.tags.definition(t.tags.name),t.tags.separator],color:h},{tag:[t.tags.typeName,t.tags.className,t.tags.number,t.tags.changed,t.tags.annotation,t.tags.modifier,t.tags.self,t.tags.namespace],color:q},{tag:[t.tags.operator,t.tags.operatorKeyword,t.tags.url,t.tags.escape,t.tags.regexp,t.tags.link,t.tags.special(t.tags.string)],color:K},{tag:[t.tags.meta,t.tags.comment],color:C},{tag:t.tags.strong,fontWeight:"bold"},{tag:t.tags.emphasis,fontStyle:"italic"},{tag:t.tags.strikethrough,textDecoration:"line-through"},{tag:t.tags.link,color:C,textDecoration:"underline"},{tag:t.tags.heading,fontWeight:"bold",color:M},{tag:[t.tags.atom,t.tags.bool,t.tags.special(t.tags.variableName)],color:x},{tag:[t.tags.processingInstruction,t.tags.string,t.tags.inserted],color:z},{tag:t.tags.invalid,color:O}]),S=[j,(0,p.syntaxHighlighting)(J)];var c=require("@codemirror/commands"),u=require("@codemirror/language"),B=require("@codemirror/autocomplete"),g=require("@codemirror/search"),m=class{constructor(o,e,r){this.editorView=null;this.content="";this.container=o,this.app=e,this.onContentChange=r}initialize(o=""){this.content=o,this.createEditor()}createEditor(){this.container.empty();let o=this.container.createDiv("typst-editor-container"),e=document.body.classList.contains("theme-dark"),r=[(0,s.lineNumbers)(),(0,u.foldGutter)(),(0,s.dropCursor)(),(0,s.rectangularSelection)(),(0,s.highlightActiveLine)(),(0,c.history)(),(0,u.bracketMatching)(),(0,B.closeBrackets)(),(0,g.highlightSelectionMatches)(),v.EditorState.allowMultipleSelections.of(!0),s.keymap.of([c.indentWithTab,...c.defaultKeymap,...g.searchKeymap]),...e?[S]:[],s.EditorView.updateListener.of(n=>{n.docChanged&&(this.content=n.state.doc.toString(),this.onContentChange&&this.onContentChange(this.content))})];this.editorView=new s.EditorView({state:v.EditorState.create({doc:this.content,extensions:r}),parent:o})}getContent(){return this.editorView?this.editorView.state.doc.toString():this.content}setContent(o){if(this.editorView){let e=this.editorView.state.update({changes:{from:0,to:this.editorView.state.doc.length,insert:o}});this.editorView.dispatch(e)}this.content=o}focus(){var o;(o=this.editorView)==null||o.focus()}destroy(){this.editorView&&(this.editorView.destroy(),this.editorView=null)}};var f=class extends i.Plugin{async onload(){this.registerExtensions(["typ"],"typst-view"),this.registerView("typst-view",o=>new w(o)),this.addCommand({id:"create-typst-file",name:"Create new Typst file",callback:()=>{new E(this.app,this).open()}})}onunload(){}},w=class extends i.TextFileView{constructor(){super(...arguments);this.currentMode="source";this.modeIconContainer=null;this.typstEditor=null;this.fileContent=""}getViewType(){return"typst-view"}getDisplayText(){var e;return((e=this.file)==null?void 0:e.basename)||"Typst File"}async onOpen(){await super.onOpen(),this.addModeIcon()}onClose(){return this.typstEditor&&(this.typstEditor.destroy(),this.typstEditor=null),super.onClose()}addModeIcon(){let e=this.containerEl.querySelector(".view-actions");e&&(this.modeIconContainer=e.createDiv("clickable-icon view-action"),this.modeIconContainer.setAttribute("aria-label","Toggle between source and reading mode"),e.insertBefore(this.modeIconContainer,e.firstChild),this.updateModeIcon(),this.modeIconContainer.addEventListener("click",()=>{this.toggleMode()}))}toggleMode(){this.currentMode==="source"&&this.typstEditor&&(this.fileContent=this.typstEditor.getContent()),this.currentMode=this.currentMode==="source"?"reading":"source",this.updateModeIcon(),this.currentMode==="source"?this.showSourceMode():this.showReadingMode(),console.log(`Switched to ${this.currentMode} mode`)}updateModeIcon(){this.modeIconContainer&&(this.modeIconContainer.empty(),this.currentMode==="source"?((0,i.setIcon)(this.modeIconContainer,"pencil-line"),this.modeIconContainer.setAttribute("aria-label","Currently in source mode. Click to switch to reading mode.")):((0,i.setIcon)(this.modeIconContainer,"book-open"),this.modeIconContainer.setAttribute("aria-label","Currently in reading mode. Click to switch to source mode.")))}async setViewData(e,r){this.fileContent=e,this.currentMode==="source"?this.showSourceMode():this.showReadingMode()}getViewData(){return this.currentMode==="source"&&this.typstEditor?this.typstEditor.getContent():this.fileContent}showSourceMode(){let e=this.containerEl.querySelector(".view-content");e&&(e.empty(),this.typstEditor&&(this.typstEditor.destroy(),this.typstEditor=null),this.typstEditor=new m(e,this.app,r=>{this.fileContent=r,this.requestSave()}),this.typstEditor.initialize(this.fileContent))}showReadingMode(){let e=this.containerEl.querySelector(".view-content");if(e){e.empty();let r=e.createEl("pre",{text:this.fileContent,cls:"typst-reading-mode"})}}clear(){this.fileContent="",this.typstEditor&&(this.typstEditor.destroy(),this.typstEditor=null)}},E=class extends i.Modal{constructor(e,r){super(e);this.fileName="";this.plugin=r}onOpen(){let{contentEl:e}=this;e.empty(),e.createEl("h2",{text:"New Typst file"}),new i.Setting(e).setName("File name").setDesc("Enter the name of the Typst file (without .typ extension)").addText(l=>{l.setPlaceholder("note").setValue(this.fileName).onChange(d=>{this.fileName=d}),l.inputEl.focus(),l.inputEl.select(),l.inputEl.addEventListener("keydown",d=>{d.key==="Enter"&&this.createFile()})});let r=e.createDiv("modal-button-container");r.createEl("button",{text:"Cancel"}).addEventListener("click",()=>{this.close()}),r.createEl("button",{text:"Create",cls:"mod-cta"}).addEventListener("click",()=>{this.createFile()})}async createFile(){if(!this.fileName.trim()){new i.Notice("Please enter a file name");return}try{let e=this.fileName.trim(),r=(0,i.normalizePath)(`${e}.typ`),n=this.app.vault.getAbstractFileByPath(r);if(n&&n instanceof i.TFile){new i.Notice("File already exists"),this.app.workspace.getLeaf(!0).openFile(n),this.close();return}let k=await this.app.vault.create(r,"",{});this.app.workspace.getLeaf(!0).openFile(k),this.close()}catch(e){console.error("Error creating Typst file:",e),new i.Notice("Error creating file")}}onClose(){let{contentEl:e}=this;e.empty()}};
